{"version":3,"sources":["components/pagination/style.js","components/pagination/index.js","utils/handle-data.js","components/theme-cover/style.js","components/theme-cover/index.js","pages/discover/c-pages/songs/store/actionCreators.js","services/songs.js","pages/discover/c-pages/songs/c-cpns/songs-category/style.js","pages/discover/c-pages/songs/c-cpns/songs-category/index.js","pages/discover/c-pages/songs/c-cpns/songs-header/style.js","pages/discover/c-pages/songs/c-cpns/songs-header/index.js","pages/discover/c-pages/songs/c-cpns/songs-list/style.js","pages/discover/c-pages/songs/c-cpns/songs-list/index.js","pages/discover/c-pages/songs/style.js","pages/discover/c-pages/songs/index.js"],"names":["PaginationWrapper","styled","div","memo","props","currentPage","total","onPageChange","className","size","current","defaultCurrent","pageSize","showSizeChanger","itemRender","type","originalElement","onChange","handleSongsCategory","data","category","categories","categoryData","Object","entries","map","name","subs","sub","item","push","singerAlphas","alphabets","start","charCodeAt","last","i","String","fromCharCode","generateSingerAlpha","ThemeCoverWrapper","right","info","src","getSizeImage","picUrl","coverImgUrl","alt","getCount","playCount","copywriter","creator","nickname","changeCurrentCategoryAction","actionTypes","currentCategory","getCategory","dispatch","request","url","then","res","changeCategoryAction","getSongList","page","getState","cat","offset","limit","params","getSongCategoryList","getIn","PER_PAGE_NUMBER","categorySongs","changeSongListAction","CategoryWrapper","useSelector","state","shallowEqual","useDispatch","selectCategory","onClick","e","index","key","sItem","HeaderWrapper","HeaderLeft","HeaderRight","useState","showCategory","setShowCategory","SongListWrapper","setCurrentPage","songList","playlists","id","SongsWrapper","useLocation","useEffect"],"mappings":"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","file":"static/js/7.64294598.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const PaginationWrapper = styled.div`\r\n  .pagination {\r\n    margin: 30px 0;\r\n    text-align: center;\r\n\r\n    .control {\r\n      width: 69px;\r\n      height: 24px;\r\n      line-height: 22px;\r\n      text-align: center;\r\n      border: 1px solid #ccc;\r\n      border-radius: 2px;\r\n      margin: 0 5px;\r\n      color: #333;\r\n\r\n      &:disabled {\r\n        color: #999;\r\n      }\r\n    }\r\n\r\n    .ant-pagination-item {\r\n      border: 1px solid #ccc !important;\r\n      margin: 0 5px;\r\n      border-radius: 3px;\r\n\r\n      a {\r\n        font-size: 12px;\r\n      }\r\n\r\n      &.ant-pagination-item-active {\r\n        background-color: #c20c0c;\r\n        border-color: #A2161B;\r\n        a {\r\n          color: #fff;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import React, { memo } from 'react';\r\n\r\nimport { Pagination } from 'antd';\r\nimport { PaginationWrapper } from './style';\r\n\r\nexport default memo(function HYPagination(props) {\r\n  const { currentPage, total, onPageChange } = props;\r\n\r\n  // render function\r\n  function itemRender(current, type, originalElement) {\r\n    if (type === 'prev') {\r\n      return <button className=\"control prev\"> &lt; 上一页</button>;\r\n    }\r\n    if (type === 'next') {\r\n      return <button className=\"control next\">上一页 &gt;</button>;\r\n    }\r\n    return originalElement;\r\n  }\r\n\r\n  return (\r\n    <PaginationWrapper>\r\n      <Pagination className=\"pagination\"\r\n        size=\"small\"\r\n        current={currentPage}\r\n        defaultCurrent={1}\r\n        total={total}\r\n        pageSize={35}\r\n        showSizeChanger={false}\r\n        itemRender={itemRender}\r\n        onChange={onPageChange} />\r\n    </PaginationWrapper>\r\n  )\r\n})\r\n","export function handleSongsCategory(data) {\r\n  // 1.获取所有的类别\r\n  const category = data.categories;\r\n\r\n  // 2.创建类别数据结构\r\n  const categoryData = Object.entries(category).map(([key, value]) => {\r\n    return {\r\n      name: value,\r\n      subs: []\r\n    }\r\n  })\r\n\r\n  // 3.将subs添加到对应的类别中\r\n  for (let item of data.sub) {\r\n    categoryData[item.category].subs.push(item);\r\n  }\r\n\r\n  return categoryData;\r\n}\r\n\r\n// 获取歌手字母类别\r\nexport function generateSingerAlpha() {\r\n  var alphabets = [\"-1\"];\r\n  var start = 'A'.charCodeAt(0);\r\n  var last  = 'Z'.charCodeAt(0);\r\n  for (var i = start; i <= last; ++i) {\r\n    alphabets.push(String.fromCharCode(i));\r\n  }\r\n\r\n  alphabets.push(\"0\");\r\n\r\n  return alphabets;\r\n}\r\n\r\nexport const singerAlphas = generateSingerAlpha();\r\n","import styled from \"styled-components\";\r\n\r\nexport const ThemeCoverWrapper = styled.div`\r\n  width: 140px;\r\n  margin: 20px ${props => (props.right || 0)} 20px 0;\r\n\r\n  .cover-top {\r\n    position: relative;\r\n\r\n    &>img {\r\n      width: 140px;\r\n      height: 140px;\r\n    }\r\n    \r\n    .cover {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      background-position: 0 0;\r\n\r\n      .info {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 0 10px;\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        background-position: 0 -537px;\r\n        color: #ccc;\r\n        height: 27px;\r\n\r\n        .erji {\r\n          margin-right: 5px;\r\n          display: inline-block;\r\n          width: 14px;\r\n          height: 11px;\r\n          background-position: 0 -24px;\r\n        }\r\n\r\n        .play {\r\n          display: inline-block;\r\n          width: 16px;\r\n          height: 17px;\r\n          background-position: 0 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .cover-bottom {\r\n    font-size: 14px;\r\n    color: #000;\r\n    margin-top: 5px;\r\n  }\r\n\r\n  .cover-source {\r\n    color: #666;\r\n  }\r\n`","import React, { memo } from 'react';\r\n\r\nimport {\r\n  getSizeImage,\r\n  getCount\r\n} from \"@/utils/format-utils\";\r\n\r\nimport {\r\n  ThemeCoverWrapper\r\n} from \"./style\";\r\n\r\nexport default memo(function HYThemeCover(props) {\r\n  const { info, right } = props;\r\n\r\n  return (\r\n    <ThemeCoverWrapper right={right}>\r\n      <div className=\"cover-top\">\r\n        <img src={getSizeImage(info.picUrl || info.coverImgUrl, 140)} alt=\"\" />\r\n        <div className=\"cover sprite_covor\">\r\n          <div className=\"info sprite_covor\">\r\n            <span>\r\n              <i className=\"sprite_icon erji\"></i>\r\n              {getCount(info.playCount)}\r\n            </span>\r\n            <i className=\"sprite_icon play\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"cover-bottom text-nowrap\">\r\n        {info.name}\r\n      </div>\r\n      <div className=\"cover-source\">\r\n        by {info.copywriter || info.creator.nickname}\r\n      </div>\r\n    </ThemeCoverWrapper>\r\n  )\r\n})\r\n","import * as actionTypes from './constants';\r\nimport { PER_PAGE_NUMBER } from './constants';\r\n\r\nimport {\r\n  getSongCategory,\r\n  getSongCategoryList\r\n} from \"@/services/songs\";\r\nimport { \r\n  handleSongsCategory\r\n} from \"@/utils/handle-data\";\r\n\r\nconst changeCategoryAction = (res) => ({\r\n  type: actionTypes.CHANGE_CATEGORY,\r\n  category: res\r\n})\r\n\r\nconst changeSongListAction = (res) => ({\r\n  type: actionTypes.CHANGE_CATEGORY_SONGS,\r\n  categorySongs: res\r\n})\r\n\r\nexport const changeCurrentCategoryAction = (name) => ({\r\n  type: actionTypes.CHANGE_CURRENT_CATEGORY,\r\n  currentCategory: name\r\n})\r\n\r\nexport const getCategory = () => {\r\n  return dispatch => {\r\n    getSongCategory().then(res => {\r\n      const categoryData = handleSongsCategory(res);\r\n      dispatch(changeCategoryAction(categoryData))\r\n    })\r\n  }\r\n}\r\n\r\nexport const getSongList = (page) => {\r\n  return (dispatch, getState) => {\r\n    // 1.获取currentCategory\r\n    const name = getState().getIn([\"songs\", \"currentCategory\"]);\r\n\r\n    // 2.获取数据\r\n    getSongCategoryList(name, page * PER_PAGE_NUMBER).then(res => {\r\n      dispatch(changeSongListAction(res));\r\n    })\r\n  }\r\n}\r\n","import request from \"./axios\";\r\n\r\nexport function getSongCategory() {\r\n  return request({\r\n    url: \"/playlist/catlist\"\r\n  })\r\n}\r\n\r\nexport function getSongCategoryList(cat=\"全部\", offset=0, limit = 35) {\r\n  return request({\r\n    url: \"/top/playlist\",\r\n    params: {\r\n      cat,\r\n      limit,\r\n      offset\r\n    }\r\n  })\r\n}","import styled from \"styled-components\";\r\n\r\nexport const CategoryWrapper = styled.div`\r\n  position: absolute;\r\n  z-index: 99;\r\n  top: 55px;\r\n  left: -25px;\r\n  width: 700px;\r\n  border: 1px solid #ccc;\r\n  background-color: #fefefe;\r\n  box-shadow: 0 0 10px 2px #d3d3d3;\r\n  border-radius: 5px;\r\n  padding-top: 10px;\r\n  \r\n  .arrow {\r\n    position: absolute;\r\n    top: -11px;\r\n    left: 110px;\r\n    width: 24px;\r\n    height: 11px;\r\n    background-position: -48px 0;\r\n  }\r\n\r\n  .all {\r\n    padding: 10px 25px;\r\n    border-bottom: 1px solid #e2e2e2;\r\n    a {\r\n      display: inline-block;\r\n      text-align: center;\r\n      width: 75px;\r\n      height: 26px;\r\n      line-height: 26px;\r\n      border: 1px solid #d3d3d3;\r\n      border-radius: 3px;\r\n      background-color: #fafafa;\r\n    }\r\n  }\r\n\r\n  .category {\r\n    padding-left: 25px;\r\n    dl {\r\n      display: flex;\r\n      align-items: flex-start;\r\n    }\r\n\r\n    dt {\r\n      display: inline-flex;\r\n      align-items: center;\r\n      padding: 15px 0 10px;\r\n      width: 70px;\r\n      text-align: center;\r\n\r\n      i {\r\n        display: inline-block;\r\n        width: 24px;\r\n        height: 24px;\r\n        background-position: -20px -735px;\r\n        margin-right: 8px;\r\n      }\r\n    }\r\n\r\n    dl.item1 {\r\n      i {\r\n        background-position: 0 -60px;\r\n      }\r\n    }\r\n\r\n    dl.item2 {\r\n      i {\r\n        background-position: 0 -88px;\r\n      }\r\n    }\r\n\r\n    dl.item3 {\r\n      i {\r\n        background-position: 0 -117px;\r\n      }\r\n    }\r\n\r\n    dl.item4 {\r\n      i {\r\n        background-position: 0 -141px;\r\n      }\r\n\r\n      dd {\r\n        padding-bottom: 25px;\r\n      }\r\n    }\r\n\r\n    dd {\r\n      padding-top: 18px;\r\n      padding-left: 15px;\r\n      flex: 1;\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      border-left: 1px solid #e2e2e2;\r\n\r\n      .item {\r\n        margin-bottom: 8px;\r\n      }\r\n\r\n      a {\r\n        color: #333;\r\n      }\r\n\r\n      .divider {\r\n        margin: 0 12px;\r\n        color: #e2e2e2;\r\n      }\r\n    }\r\n  }\r\n`","import React, { memo } from 'react';\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\n\r\nimport {\r\n  changeCurrentCategoryAction,\r\n  getSongList\r\n} from \"../../store/actionCreators\";\r\n\r\nimport {\r\n  CategoryWrapper\r\n} from \"./style\";\r\n\r\nexport default memo(function HYSongsCategory() {\r\n  // redux\r\n  const { category } = useSelector(state => ({\r\n    category: state.getIn([\"songs\", \"category\"])\r\n  }), shallowEqual);\r\n  const dispatch = useDispatch();\r\n\r\n  function selectCategory(name) {\r\n    dispatch(changeCurrentCategoryAction(name));\r\n    dispatch(getSongList(0));\r\n  }\r\n\r\n  return (\r\n    <CategoryWrapper>\r\n      <div className=\"arrow sprite_icon\"></div>\r\n      <div className=\"all\">\r\n        <span className=\"link\" onClick={e => selectCategory(\"全部\")}>全部风格</span>\r\n      </div>\r\n      <div className=\"category\">\r\n        {\r\n          category.map((item, index) => {\r\n            return (\r\n              <dl key={item.name} className={\"item\" + index}>\r\n                <dt>\r\n                  <i className=\"icon sprite_icon2\"></i>\r\n                  <span>{item.name}</span>\r\n                </dt>\r\n                <dd>\r\n                  {\r\n                    item.subs.map(sItem => {\r\n                      return (\r\n                        <div className=\"item\" key={sItem.name}>\r\n                          <span className=\"link\" onClick={e => selectCategory(sItem.name)}>{sItem.name}</span>\r\n                          <span className=\"divider\">|</span>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </dd>\r\n              </dl>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </CategoryWrapper>\r\n  )\r\n})\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 2px solid #c20c0c;\r\n  padding-bottom: 6px;\r\n`\r\n\r\nexport const HeaderLeft = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  .title {\r\n    font-size: 24px;\r\n    font-family: \"Microsoft Yahei\", Arial, Helvetica, sans-serif;\r\n  }\r\n\r\n  .select {\r\n    position: relative;\r\n    top: 2px;\r\n    width: 91px;\r\n    height: 31px;\r\n    line-height: 31px;\r\n    background-color: #fafafa;\r\n    border: 1px solid #d3d3d3;\r\n    border-radius: 3px;\r\n    color: #0c73c2;\r\n    margin-left: 10px;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: #fff;\r\n    } \r\n\r\n    i {\r\n      position: relative;\r\n      left: 5px;\r\n      bottom: 2px;\r\n      display: inline-block;\r\n      width: 8px;\r\n      height: 5px;\r\n      background-position: -70px -543px;\r\n    }\r\n  }\r\n\r\n  .show {\r\n    /* display: block !important; */\r\n  }\r\n\r\n  .category {\r\n    display: block;\r\n    .cover {\r\n      position: fixed;\r\n      left: 0;\r\n      right: 0;\r\n      top: 105px;\r\n      bottom: 0;\r\n      background-color: rgba(0,0,0,.05);\r\n    }\r\n  }\r\n`\r\n\r\nexport const HeaderRight = styled.div`\r\n  .hot {\r\n    width: 46px;\r\n    height: 29px;\r\n    background-color: #c20c0c;\r\n    color: #fff;\r\n    border-radius: 3px;\r\n    border: 1px solid #aaa;\r\n  }\r\n`","import React, { useState, memo } from 'react';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\n\r\nimport HYSongsCategory from '../songs-category'\r\nimport {\r\n  HeaderWrapper,\r\n  HeaderLeft,\r\n  HeaderRight\r\n} from \"./style\";\r\n\r\nexport default memo(function HYSongsHeader() {\r\n  // hooks\r\n  const [showCategory, setShowCategory] = useState(false);\r\n\r\n  // redux\r\n  const { currentCategory } = useSelector(state => ({\r\n    currentCategory: state.getIn([\"songs\", \"currentCategory\"])\r\n  }), shallowEqual);\r\n\r\n  return (\r\n    <HeaderWrapper>\r\n      <HeaderLeft>\r\n        <span className=\"title\">{currentCategory}</span>\r\n        <button className=\"select\" onClick={e => setShowCategory(!showCategory)}>\r\n          <span>选择分类</span>\r\n          <i className=\"sprite_icon2\"></i>\r\n        </button>\r\n        {showCategory ? <HYSongsCategory /> : null}\r\n      </HeaderLeft>\r\n      <HeaderRight>\r\n        <button className=\"hot\">热门</button>\r\n      </HeaderRight>\r\n    </HeaderWrapper>\r\n  )\r\n})\r\n","import styled from 'styled-components';\r\n\r\nexport const SongListWrapper = styled.div`\r\n  .songs-list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    margin-right: -30px;\r\n  }\r\n`","import React, { useState, memo } from 'react';\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\n\r\nimport { PER_PAGE_NUMBER } from '../../store/constants';\r\nimport { getSongList } from \"../../store/actionCreators\";\r\n\r\nimport HYThemeCover from '@/components/theme-cover';\r\nimport HYPagination from '@/components/pagination';\r\nimport {\r\n  SongListWrapper\r\n} from \"./style\";\r\n\r\nexport default memo(function HYSongsList() {\r\n  // hooks\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  // redux\r\n  const { categorySongs } = useSelector(state => ({\r\n    categorySongs: state.getIn([\"songs\", \"categorySongs\"])\r\n  }), shallowEqual);\r\n  const songList = categorySongs.playlists || [];\r\n  const total = categorySongs.total || 0;\r\n  const dispatch = useDispatch();\r\n\r\n  function onPageChange(page, pageSize) {\r\n    setCurrentPage(page);\r\n    dispatch(getSongList(page));\r\n  }\r\n\r\n  return (\r\n    <SongListWrapper>\r\n      <div className=\"songs-list\">\r\n        {\r\n          songList.map((item, index) => {\r\n            return (\r\n              <HYThemeCover info={item} key={item.id} right=\"30px\" />\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n      <HYPagination currentPage={currentPage} \r\n                    total={total} \r\n                    pageSize={PER_PAGE_NUMBER}\r\n                    onPageChange={onPageChange}/>\r\n    </SongListWrapper>\r\n  )\r\n})\r\n","import styled from 'styled-components';\r\n\r\nexport const SongsWrapper = styled.div`\r\n  padding: 40px;\r\n  border: 1px solid #d3d3d3;\r\n  border-width: 0 1px;\r\n  background-color: #fff;\r\n`","import React, { useEffect, memo } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { \r\n  getCategory,\r\n  getSongList,\r\n  changeCurrentCategoryAction\r\n} from \"./store/actionCreators\";\r\n\r\nimport HYSongsHeader from \"./c-cpns/songs-header\";\r\nimport HYSongsList from './c-cpns/songs-list';\r\nimport {\r\n  SongsWrapper\r\n} from \"./style\"\r\n\r\nexport default memo(function HYSongs() {\r\n  // redux\r\n  const dispatch = useDispatch();\r\n  const cat = useLocation().cat;\r\n\r\n  useEffect(() => {\r\n    dispatch(changeCurrentCategoryAction(cat));\r\n  }, [dispatch, cat]);\r\n\r\n  // hooks\r\n  useEffect(() => {\r\n    dispatch(getCategory());\r\n    dispatch(getSongList(0));\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <SongsWrapper className=\"wrap-v2\">\r\n      <HYSongsHeader/>\r\n      <HYSongsList/>\r\n    </SongsWrapper>\r\n  )\r\n})\r\n"],"sourceRoot":""}